<?xml version="1.0" encoding="UTF-8"?>
<project name="rapid-framework" default="jar" basedir=".">

	<property name="src.dir" location="src/main/java" />
	<property name="src.lib" location="lib" />
	<property name="build.dir" location="build" />
	<property name="build.doc" location="${build.dir}/doc" />
	<property name="build.src" location="${build.dir}/src" />
	<property name="build.dist" location="${build.dir}/dist" />
	<property name="build.classes" location="${build.dir}/classes" />
	<property name="build.test.dir" location="${build.dir}/test" />
	<property name="build.test.report" location="${build.test.dir}/report" />
	<property name="build.test.classes" location="${build.test.dir}/classes" />
		
		
	<property file="build.properties"/>
	<property environment="env"/>
	<target name="test">
		<echo>${ant.home}</echo>
		<echo>${ant.version}</echo>
		<echo>${env.CATALINA_HOME}</echo>
		<echo>${env.OS}</echo>
	</target>
	
	<path id="compile-path">
		<fileset dir="${lib.dir}" includes="*.jar"></fileset>
	</path>

	<fileset id="srcAllFile" dir="${src.dir}" includes="**/*.*" />
	<fileset id="srcPartFile" dir="${src.dir}">
		<include name="**/*.java" />
		<exclude name="**/Test*.java" />
	</fileset>
	
	<target name="mkdir">
		<delete dir="${build.dir}" />
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.src}"/>
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.doc}"/>
		<mkdir dir="${build.dist}"/>
	</target>
	
	<target name="copySrc" depends="mkdir">
		<copy todir="${build.src}" >
			<fileset refid="srcPartFile" />
		</copy>
	</target>
	
	<target name="compile" depends="copySrc">
    	<javac destdir="${build.classes}" srcdir="${src.dir}/test" />
    </target>

	<target name="jar" depends="compile">
    	<jar destfile="${build.dist}/hello.jar" basedir="${build.classes}">
			<manifest>
				<attribute name="Main-Class" value="${execute.class}"/>
			</manifest>
		</jar>
    </target>

	<target name="compile-test" depends="compile">
		<echo>编译测试文件</echo>
		<javac failonerror="true" includeantruntime="true" srcdir="${test.src.dir}" destdir="${build.test.classes}" classpathref="compile-test-path"/>
	</target>
	
	<target name="run-test" depends="compile-test">
		<echo>运行单元测试</echo>
		<junit printsummary="false" haltonfailure="false">
			<classpath refid="run-test-path"></classpath>
			<formatter type="brief" usefile="false"/>
			<!--<test name="${run.test.class}"></test>-->
			<formatter type="xml"/>
			<batchtest todir="${build.test.report}">
				<fileset dir="${build.test.classes}" includes="${run.test.class}"></fileset>
			</batchtest>
		</junit>
		<junitreport todir="${build.test.report}">
			<fileset dir="${build.test.report}" includes="TEST-*.xml"></fileset>
			<report format="frames" todir="${build.test.report}/html"/>
		</junitreport>
	</target>

	<!-- <target name="execute" depends="jar,copySrc">
		<java classpath="${build.classes}" classname="${execute.class}"></java>
		<java fork="true" jar="${build.lib.dir}/${jar.name}"></java>
	</target> -->
	
	<target name="loadfile">
        <loadfile property="file" srcFile="buildtest/loadfile.txt"/>
        <echo message="${file}" />
    </target>

	<target name="replace">
		<loadfile property="file" srcFile="buildtest/loadfile.txt" encoding="UTF-8"/>
		<echo message="${file}&#13;&#10;&lt;/dependencies>" />
		<replace file="buildtest/replace.txt" value="${file}&#13;&#10;&lt;/dependencies>" encoding="UTF-8">
			<replacetoken><![CDATA[</dependencies>]]></replacetoken>
		</replace>
    </target>

	<target name="doc" depends="mkdir">
		<javadoc sourcepath="${src.dir}" private="true" windowtitle="我的JAVA DOC"
			use="true" packagenames="com.*" destdir="${build.doc}"
			charset="UTF-8" docencoding="UTF-8" encoding="UTF-8">
			<classpath path="${build.classes}"></classpath>
		</javadoc>
	</target>
	
	<target name="zip" depends="doc">
		<zip destfile="${zip.dir}/${zip.name}" duplicate="preserve">
			<zipfileset dir="${build.doc}" 
				includes="**/*.*" 
				prefix="${project.name}/doc/api"></zipfileset>
			<zipfileset 
				dir="${src.dir}" 
				includes="**/*.*" 
				prefix="${project.name}/src"></zipfileset>
		</zip>
	</target>
	
	<target name="ftp" depends="zip">
		<ftp userid="kh" password="123" server="localhost" 
			 action="put" remotedir="user">
			<fileset dir="${zip.dir}" includes="*.zip"></fileset>
		</ftp>
	</target>


</project>
